# Queries

# 1. Customer Demographics

- Gender Distribution - 

SELECT 
    Gender,
    COUNT(*) AS CustomerCount
FROM 
    online_shopping
GROUP BY 
    Gender
ORDER BY 
    CustomerCount DESC;

- Customer Distribution by Location - 

SELECT 
    Location,
    Gender,
    COUNT(*) AS CustomerCount
FROM 
    online_shopping
GROUP BY 
    Location, Gender
ORDER BY 
    CustomerCount DESC;

- Customer Analysis by Tenure (Months) -

SELECT 
    Tenure_Months,
    COUNT(*) AS CustomerCount
FROM 
    online_shopping
GROUP BY 
    Tenure_Months
ORDER BY 
    Tenure_Months ASC;

- Gender and Tenure-Based Customer Analysis -

SELECT 
    Gender,
    Tenure_Months,
    COUNT(*) AS CustomerCount
FROM 
    online_shopping
GROUP BY 
    Gender, Tenure_Months
ORDER BY 
    Gender, Tenure_Months ASC;

- Tenure Range-Based Gender Distribution -

SELECT 
    Gender,
    CASE
        WHEN Tenure_Months BETWEEN 0 AND 12 THEN '0-12 months'
        WHEN Tenure_Months BETWEEN 13 AND 24 THEN '13-24 months'
        WHEN Tenure_Months BETWEEN 25 AND 36 THEN '25-36 months'
        ELSE 'Over 36 months'
    END AS Tenure_Range,
    COUNT(CustomerID) AS CustomerCount
FROM 
    online_shopping
GROUP BY 
    Gender, Tenure_Range
ORDER BY 
    Gender ASC,
    FIELD(Tenure_Range, '0-12 months', '13-24 months', '25-36 months', 'Over 36 months');

# 2. Sales Analysis

- Total Sales and Quantity by Product Category -

SELECT 
    Product_Category,
    SUM(Quantity) AS TotalQuantity,
    SUM(Quantity * Avg_Price) AS TotalSales
FROM 
    online_shopping
GROUP BY 
    Product_Category
ORDER BY 
    TotalSales DESC;

-  Monthly Sales and Units Sold - 

SELECT 
    Month,
    SUM(Quantity * Avg_Price) AS TotalSales,
    SUM(Quantity) AS TotalUnitsSold
FROM 
    online_shopping
GROUP BY 
    Month
ORDER BY 
    Month ASC;

- Sales by Gender and Location -

SELECT 
    Gender,
    Location,
    SUM(Quantity * Avg_Price) AS TotalSales
FROM 
    online_shopping
GROUP BY 
    Gender, Location
ORDER BY 
    TotalSales DESC;

# 3. Location and Category-Based Sales Patterns

 - Monthly Sales by Location - 

SELECT 
    Month,
    Location,
    SUM(Quantity * Avg_Price) AS TotalSales
FROM 
    online_shopping
GROUP BY 
    Month, Location
ORDER BY 
    Month ASC, TotalSales DESC;

- Category and Location-Based Sales - 

SELECT 
    Location,
    Product_Category,
    SUM(Quantity * Avg_Price) AS TotalSales
FROM 
    online_shopping
GROUP BY 
    Location, Product_Category
ORDER BY 
    TotalSales DESC;

# 4. Product and Customer Analysis

- Product Sales and Units Sold -

SELECT 
    Product_Description,
    SUM(Quantity) AS TotalUnitsSold,
    SUM(Quantity * Avg_Price) AS TotalSales
FROM 
    online_shopping
GROUP BY 
    Product_Description
ORDER BY 
    TotalSales DESC;

- Top 10 Highest-Spending Customers -

SELECT 
    CustomerID,
    SUM(Quantity * Avg_Price) AS TotalSpending
FROM 
    online_shopping
GROUP BY 
    CustomerID
ORDER BY 
    TotalSpending DESC
LIMIT 10;

- Sales Percentage by Product Category -

SELECT 
    Product_Category,
    SUM(Quantity * Avg_Price) AS TotalSales,
    (SUM(Quantity * Avg_Price) / (SELECT SUM(Quantity * Avg_Price) FROM online_shopping) * 100) AS SalesPercentage
FROM 
    online_shopping
GROUP BY 
    Product_Category
ORDER BY 
    TotalSales;

# 5. Coupon Usage Analysis

- Monthly Coupon Status Analysis -

SELECT 
    Month,
    Coupon_Status,
    COUNT(Transaction_ID) AS CouponCount
FROM 
    online_shopping
GROUP BY 
    Month, Coupon_Status
ORDER BY 
    Month ASC, Coupon_Status;

-  Coupon Usage by Product Category -

SELECT 
    Product_Category,
    Coupon_Status,
    COUNT(Transaction_ID) AS CouponCount
FROM 
    online_shopping
WHERE 
    Coupon_Status = 'Used'
GROUP BY 
    Product_Category, Coupon_Status
ORDER BY 
    CouponCount DESC;

- Monthly Coupon Usage Rate -

SELECT 
    Month,
    SUM(CASE WHEN Coupon_Status = 'Used' THEN 1 ELSE 0 END) AS UsedCoupons,
    SUM(CASE WHEN Coupon_Status = 'Clicked' THEN 1 ELSE 0 END) AS ClickedCoupons,
    (SUM(CASE WHEN Coupon_Status = 'Used' THEN 1 ELSE 0 END) / 
     SUM(CASE WHEN Coupon_Status = 'Clicked' THEN 1 ELSE 0 END)) * 100 AS UsageRate
FROM 
    online_shopping
GROUP BY 
    Month
ORDER BY 
    Month ASC;

- Coupon Status Summary -

SELECT 
    Coupon_Status,
    COUNT(Transaction_ID) AS TotalCoupons
FROM 
    online_shopping
GROUP BY 
    Coupon_Status
ORDER BY 
    TotalCoupons DESC;

